{"version":3,"sources":["components/users/UserList.js","components/users/UserShow.js","components/users/UserPost.js","components/users/UserPostShow.js","App.js","reducers/postsReducer.js","reducers/userReducer.js","reducers/commentsReducer.js","store/configureStore.js","index.js","actions/userAction.js","actions/postAction.js","actions/commentAction.js"],"names":["connect","state","users","props","length","map","user","key","id","to","name","match","params","find","parseInt","post","posts","filter","userId","title","console","log","comments","comment","postId","body","App","path","component","UserList","exact","UserShow","UserPost","UserPostShow","postInitialState","postReducer","action","type","concat","payload","userInitialState","userReducer","commentInitialState","commentReducer","configureStore","createStore","combineReducers","applyMiddleware","thunk","store","getState","subscribe","dispatch","axios","get","then","response","data","setUsers","catch","err","setPost","setComment","jsx","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.13b52eb4.chunk.js","sourcesContent":["import React from 'react'\nimport {Link} from 'react-router-dom'\nimport {connect} from 'react-redux'\n\nfunction UserList(props){\n        return (\n            <div>\n                <h2> Listing Users - { props.users.length } </h2>\n                <ul>\n                    { props.users.map(function(user){\n                        return <li key={user.id}> <Link to={`/users/${user.id}`}>{ user.name }</Link> </li>\n                    })}\n                </ul>\n            </div> \n        )\n}\n\nconst mapStateToProps=(state)=>{\n    return{\n        users:state.users\n    }\n}\nexport default connect(mapStateToProps)(UserList)","import React from 'react'\nimport {Link} from 'react-router-dom'\nimport {connect} from 'react-redux'\nfunction  UserShow(props){\n        return(\n            <div>\n                {\n                    props.user && props.post && (\n                        <div>\n                            <h2>user Name--{props.user.name}</h2>\n                            <h3>POST WRITTEN BY USERS</h3>\n                            {\n                                <ol>\n                                { props.post.map(function(post){\n                                    return <li key={post.id}><Link to={`/posts/${post.id}`}> { post.title }</Link> </li>\n                                })}\n                            </ol>\n                            }\n                        </div>\n                    )\n                }\n                <Link to=\"/users\">Back</Link>\n\n                </div>\n        )\n}\nconst mapStateToProps=(state,props)=>{\n    const id=props.match.params.id\n    return{\n        user:state.users.find(user=>user.id===parseInt(id)),\n        post:state.posts.filter(post=>post.userId===parseInt(id))\n    }\n}\nexport default connect(mapStateToProps)(UserShow)","import React from 'react'\nimport {Link} from 'react-router-dom'\nimport {connect} from 'react-redux'\n\n\nfunction UserPost(props){   \n        return (\n            <div>\n                <h2> Listing Posts - { props.posts.length } </h2>\n                <ul>\n                    { props.posts.map(function(post){\n                        return <li key={post.id}><Link to={`/posts/${post.id}`}> { post.title }</Link> </li>\n                    })}\n                </ul>\n            </div> \n        )\n}\nconst mapStateToProps=(state)=>{\n    return{\n        posts:state.posts\n    }\n}\nexport default connect(mapStateToProps)(UserPost)","import React from 'react'\nimport {Link} from 'react-router-dom'\nimport {connect} from 'react-redux'\n\n\nfunction UserPostShow (props){\n     \n    return (\n            <div>         \n                {\n                   \n                    props.post  &&(\n                        <div>\n                            <h2>USER NAME:{props.user?props.user.name:''}</h2>\n                            <h3>Title: {props.post.title}</h3>\n                            <h4>Body: <br /><br />{props.post.body}</h4>\n                            <hr />\n                            <h3>Comments:</h3>\n                            <ol>\n                                {\n                                    props.comments.map((comment)=>{\n                                        return(\n                                            <li key={comment.id}>{comment.body}</li>\n                                        )\n                                    })\n                                }\n                            </ol>    \n                        </div>\n                    )\n                }\n                <hr />\n                <Link to={`/users/${props.user?props.user.id:''}`}>More Posts by Author:{props.user?props.user.name:''}</Link>\n            </div> \n        )\n}\nconst mapStatetoProps=(state,props)=>{\n    const id=props.match.params.id\n    console.log(id)\n    const post=state.posts.find(post=>post.id===parseInt(id))\n    if(post){\n        return {\n            post,\n            user:state.users.find(user=>user.id==post.userId),\n            comments:state.comments.filter(comment=>comment.postId==id)\n        }\n    }\n    \n}\nexport default connect(mapStatetoProps)(UserPostShow)","import React from 'react';\nimport  {BrowserRouter,Route,Link} from 'react-router-dom'\nimport './App.css';\nimport UserList from './components/users/UserList'\nimport UserShow from './components/users/UserShow'\nimport UserPost from './components/users/UserPost'\nimport UserPostShow from './components/users/UserPostShow'\n//import PostByUSerShow from './components/users/PostByUSerShow'\n\nfunction App() {\n  return (\n    <BrowserRouter>\n    <div>\n      <h2>Blogger</h2>\n      <p>\n        <Link to=\"/\">Home</Link> | \n        <Link to=\"/users\">Users</Link> | \n        <Link to=\"/posts\">Posts</Link>\n      </p>\n      <Route path=\"/users\" component={UserList} exact={true}/>\n      <Route path=\"/users/:id\" component={UserShow} />\n      <Route path=\"/posts\" component={UserPost} exact={true}/>\n      <Route path=\"/posts/:id\" component={UserPostShow} />\n      {/* <Route path=\"/posts?userId:id\" component={PostByUSerShow}  /> */}\n      \n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const postInitialState=[]\n\nconst postReducer=(state=postInitialState,action)=>{\n    switch(action.type){\n        case 'SET_POST':{\n            return [].concat(action.payload)\n        }\n        default:{\n            return [].concat(state)\n        }\n    }\n}\nexport default postReducer","const userInitialState=[]\n\nconst userReducer=(state=userInitialState,action)=>{\n    switch(action.type){\n        case'SET_USER' :{\n            return [].concat(action.payload) //[...action.payload]\n        }\n        default:{\n            return [].concat(state)\n        }\n    }\n}\nexport default userReducer","const commentInitialState=[]\n\nconst commentReducer=(state=commentInitialState,action)=>{\n    switch(action.type){\n        case 'SET_COMMENT':{\n            return [].concat(action.payload)\n        }\n        default:{\n            return [].concat(state)\n        }\n    }\n}\nexport default commentReducer","import {createStore,combineReducers,applyMiddleware} from 'redux'\nimport thunk from 'redux-thunk'\nimport postReducer from '../reducers/postsReducer'\nimport userReducer from '../reducers/userReducer'\nimport commentReducer from '../reducers/commentsReducer'\nconst configureStore=()=>{\n    const store=createStore(combineReducers({\n        posts:postReducer,\n        users:userReducer,\n        comments:commentReducer\n    }),applyMiddleware(thunk))\n    return store\n}\n\nexport default configureStore","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n//import * as serviceWorker from './serviceWorker';\nimport configureStore from './store/configureStore'\nimport {Provider} from 'react-redux'\nimport {startSetUsers} from './actions/userAction'\nimport {startSetPost} from './actions/postAction'\nimport {startSetComment} from './actions/commentAction'\nconst store=configureStore()\nconsole.log(store.getState())\n\n\nstore.subscribe(()=>{\n    console.log(store.getState())\n})\n\nstore.dispatch(startSetUsers())\nstore.dispatch(startSetPost())\nstore.dispatch(startSetComment())\n\nconst jsx=(\n    <Provider store={store}>\n        <App />\n    </Provider>\n)\n\nReactDOM.render(jsx, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n//serviceWorker.unregister();\n","import axios from 'axios'\nexport const setUsers=(users)=>{\n    return {type:'SET_USER',payload:users}\n}\n\nexport const startSetUsers=()=>{\n    return (dispatch)=>{\n        axios.get('https://jsonplaceholder.typicode.com/users')\n        .then((response)=>{\n            const users=response.data\n            dispatch(setUsers(users))\n        })\n        .catch((err)=>{\n            console.log(err)\n        })\n    }\n}","import axios from 'axios'\nexport const setPost=(posts)=>{\n    return {type:'SET_POST',payload:posts}\n}\n\nexport const startSetPost=()=>{\n    return (dispatch)=>{\n        axios.get('https://jsonplaceholder.typicode.com/posts')\n        .then((response)=>{\n            const posts=response.data\n            dispatch(setPost(posts))\n        })\n        .catch((err)=>{\n            console.log(err)\n        })\n    }\n}","import axios from \"axios\"\n\nexport const setComment=(comments)=>{\n    return {type:'SET_COMMENT',payload:comments}\n}\n\nexport const startSetComment=()=>{\n    return (dispatch)=>{\n        axios.get('https://jsonplaceholder.typicode.com/comments')\n        .then((response)=>{\n            const comments=response.data\n            dispatch(setComment(comments))\n        })\n    }\n}"],"sourceRoot":""}